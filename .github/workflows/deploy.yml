name: BackEnd - CI/CD
on:
  push:
    branches:
      - main

env:
  SERVICE_NAME: gateway-service

jobs:
  run_docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SUNGMIN_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

#      - name: Docker Stop Container
#        run: docker stop $(docker ps --format '{{.ID}} {{.Names}}' | awk '/${{ env.SERVICE_NAME }}/{print $1}') 2>/dev/null || true
#
#      - name: Docker Pull Image and Run New Container
#        run: docker run --name ${{ env.SERVICE_NAME }} --rm -d -p 8000:8000 ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.SERVICE_NAME }}:latest
#
#      - name: Delete Old Docker Image
#        run: docker images | grep '${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPO }}/${{ env.SERVICE_NAME }}' | grep '<none>' |awk '{print $3}' | xargs -r docker rmi

#  notify_success:
#    needs: [ build_and_push, run_docker_image ]
#    runs-on: ubuntu-latest
#    if: success()
#    steps:
#      - uses: 8398a7/action-slack@v3
#        with:
#          status: success
#          author_name: CI Monitoring_bot
#          fields: repo,message,commit,eventName,ref,workflow,author,took
#          if_mention: always
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#
#  notify_failure:
#    needs: [ build_and_push, run_docker_image ]
#    runs-on: ubuntu-latest
#    if: failure()
#    steps:
#      - uses: 8398a7/action-slack@v3
#        with:
#          status: failure
#          author_name: CI Monitoring_bot
#          fields: repo,message,commit,eventName,ref,workflow,author,took
#          if_mention: always
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}